---
- name: Restart amavisd
  ansible.builtin.systemd_service:
    name: amavisd
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart clamav-freshclam
  ansible.builtin.systemd_service:
    name: clamav-freshclam
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart cyrus-imapd
  ansible.builtin.systemd_service:
    name: cyrus-imapd
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: "Restart dirsrv@{{ mailserver_hostname }}"
  ansible.builtin.systemd_service:
    name: "dirsrv@{{ mailserver_hostname }}"
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart dnsdist
  ansible.builtin.systemd_service:
    name: dnsdist
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart dovecot
  ansible.builtin.systemd_service:
    name: dovecot
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart fail2ban
  ansible.builtin.systemd_service:
    name: fail2ban
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart firewalld
  ansible.builtin.systemd_service:
    name: firewalld
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart httpd
  ansible.builtin.systemd_service:
    name: httpd
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart kolab
  ansible.builtin.systemd_service:
    name: "{{ kolab_service }}"
    daemon_reload: yes
    enabled: yes
    state: restarted
  loop:
    - kolabd
    - kolab-saslauthd
  loop_control:
    loop_var: kolab_service
- name: Restart mongod
  ansible.builtin.systemd_service:
    name: mongod
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart NetworkManager
  ansible.builtin.systemd_service:
    name: NetworkManager
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart opendkim
  ansible.builtin.systemd_service:
    name: opendkim
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart opendmarc
  ansible.builtin.systemd_service:
    name: opendmarc
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart pdns
  ansible.builtin.systemd_service:
    name: pdns
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart pdns-recursor
  ansible.builtin.systemd_service:
    name: pdns-recursor
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart php-fpm
  ansible.builtin.systemd_service:
    name: "{{ php_fpm_service }}"
    daemon_reload: yes
    enabled: yes
    state: restarted
  loop:
    - php74-php-fpm
    # - php81-php-fpm
  loop_control:
    loop_var: php_fpm_service
- name: Restart postfix
  ansible.builtin.systemd_service:
    name: postfix
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart postgrey
  ansible.builtin.systemd_service:
    name: postgrey
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart spamassassin
  ansible.builtin.systemd_service:
    name: spamassassin
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart spamass-milter
  ansible.builtin.systemd_service:
    name: spamass-milter
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Default to localhost in resolv.conf
  ansible.builtin.copy:
    dest: /etc/resolv.conf
    content: |
      nameserver 127.0.0.1
      nameserver ::1
      search {{ ([mailserver_domain] + custom_domains) | join(' ') }}
    backup: true
    force: true
    owner: root
    group: root
    mode: u=rw,og=r
- name: Restart systemd-resolved
  ansible.builtin.systemd_service:
    name: systemd-resolved
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart vsftpd
  ansible.builtin.systemd_service:
    name: vsftpd
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Restart WireGuard
  ansible.builtin.systemd_service:
    name: "wg_vpn.{{ systemd_unit_type }}"
    daemon_reload: yes
    state: started
  loop:
    - path
    - service
  loop_control:
    loop_var: systemd_unit_type
- name: Warn on passwords
  ansible.builtin.debug:
    msg: "!!!WARNING!!! All web UI admin passwords are set to the same as your admin user's password. For your own safety, change them before going live"
- name: Initialize aide database
  ansible.builtin.command: /usr/sbin/aide -i
  when: not aide_db_check.stat.exists
- name: Move new aide database into place
  ansible.builtin.command: mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
