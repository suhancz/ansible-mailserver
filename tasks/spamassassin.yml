---
- name: Create razor home directory
  file:
    path: /var/lib/razor/
    state: directory
- name: Create Razor account
  command: razor-admin -create -home=/var/lib/razor
- name: Discover Razor account
  command: razor-admin -discover -home=/var/lib/razor
- name: Register Razor account
  command: razor-admin -register -home=/var/lib/razor
- name: Configure SPAMAssassin options
  lineinfile:
    regexp: 'SPAMDOPTIONS'
    line: SPAMDOPTIONS="-c -m5 -H --razor-home-dir='/var/lib/razor/' --razor-log-file='sys-syslog' --virtual-config-dir=/var/vmail/%d/%l/spamassassin --username=vmail"
    path: /etc/sysconfig/spamassassin
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  notify: Restart spamassassin
- name: Configure SPAMAssassin milter flags
  lineinfile:
    regexp: 'EXTRA_FLAGS'
    line: 'EXTRA_FLAGS=" -e {{ mailserver_domain }} -u sa-milt -m -r 8 -R SPAM_ARE_NOT_ALLOWED_HERE -i 127.0.0.1 -g sa-milt -- --max-size=52428800"'
    path: /etc/sysconfig/spamass-milter
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  notify: Restart spamass-milter
- name: Add Postfix user to the sa-milt group
  user:
    name: postfix
    groups: sa-milt
    append: yes
- name: Configure SPAMAssassin rules
  lineinfile:
    regexp: '{{ item.type }} {{ item.key }}'
    line: '{{ item.type }} {{ item.key }}    {{ item.value }}'
    path: /etc/mail/spamassassin/local.cf
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop: "{{ spamassassin_rules }}"
  notify: Restart spamassassin
- name: Upload sieve config
  copy:
    dest: /var/mail/SpamToJunk.sieve
    src: spamassassin/SpamToJunk.sieve
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
  notify: Restart spamassassin
- name: Enable sieve config
  command: sievec /var/mail/SpamToJunk.sieve
  args:
    creates: /var/mail/SpamToJunk.svbin
- name: Enable SpamAssassin update service
  ansible.builtin.systemd_service:
    name: sa-update.timer
    daemon_reload: yes
    enabled: yes
    state: restarted
