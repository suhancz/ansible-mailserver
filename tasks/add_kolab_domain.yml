---
- name: Authenticate against the Kolab API
  when: (kolab_api_auth is not defined) or (kolab_api_auth.cookies_string is not defined) or (kolab_api_auth.cookies_string | length == 0) or (kolab_api_auth.json.result.session_token is not defined) or (kolab_api_auth.json.result.session_token | length == 0)
  ansible.builtin.include_tasks: kolab_auth.yml
- name: "List domains"
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domains.list"
    method: POST
    body_format: json
    body:
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: kolab_domains
  failed_when: kolab_domains.json.status != 'OK'

# - name: "List domain types"
#   ansible.builtin.uri:
#     url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain_types.list"
#     method: POST
#     body_format: json
#     body:
#       session_token: "{{ kolab_api_auth.json.result.session_token }}"
#     return_content: true
#     headers:
#       Cookie: "{{ kolab_api_auth.cookies_string }}"
#   register: kolab_domain_types
#   failed_when: kolab_domain_types.json.status != 'OK'
- name: Display Kolab domains
  ansible.builtin.debug:
    var: kolab_domains.json.result
- name: Empty domain update variable
  ansible.builtin.set_fact:
    kolab_domain_update:
# TODO: figure out (probably via reverse-enigneering) how to add subdomains via the API
- name: "Update Kolab domain {{ kolab_domain }}"
  when: kolab_domain in current_kolab_domain.value.associateddomain
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain.edit"
    method: POST
    body_format: json
    body:
      associateddomain: "{{ current_kolab_domain.value.associateddomain | default([]) + [kolab_domain] }}"
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
      inetdomainstatus: ''
      domainrelatedobject_only: ''
      inetdomainbasedn: ''
      type_id: '1'
      object_type: domain
      # id: 6bf74310-d69211ee-9d348af5-9d2fe72b
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: kolab_domain_update
  failed_when: kolab_domain_update.json.status != 'OK'
  changed_when: kolab_domain_update.json.status == 'OK'
  loop: "{{ kolab_domains.json.result.list | dict2items }}"
  loop_control:
    loop_var: current_kolab_domain
- name: "Add Kolab domain {{ kolab_domain }}"
  # when: not kolab_domain_update.changed
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain.add"
    method: POST
    body_format: json
    body:
      type_id: 1
      associateddomain: "{{ kolab_domain }}"
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: kolab_domain_add
  failed_when: kolab_domain_add.json.status != 'OK'
  changed_when: kolab_domain_add.json.status == 'OK'
