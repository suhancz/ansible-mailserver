---
- name: Authenticate against the Kolab API
  when: (kolab_api_auth is not defined) or (kolab_api_auth.cookies_string is not defined) or (kolab_api_auth.cookies_string | length == 0) or (kolab_api_auth.json.result.session_token is not defined) or (kolab_api_auth.json.result.session_token | length == 0)
  ansible.builtin.include_tasks: kolab_auth.yml
- name: "List domains"
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domains.list"
    method: POST
    body_format: json
    body:
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: kolab_domains
  failed_when: kolab_domains.json.status != 'OK'
# - name: "List domain types"
#   ansible.builtin.uri:
#     url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain_types.list"
#     method: POST
#     body_format: json
#     body:
#       session_token: "{{ kolab_api_auth.json.result.session_token }}"
#     return_content: true
#     headers:
#       Cookie: "{{ kolab_api_auth.cookies_string }}"
#   register: kolab_domain_types
#   failed_when: kolab_domain_types.json.status != 'OK'
# - name: Display Kolab domain types
#   ansible.builtin.debug:
#     var: kolab_domain_types.json.result
- name: "Add Kolab domain {{ kolab_domain }}"
  # when:  ('associateddomain=' ~ kolab_domain ~ ',') not in lookup('ansible.builtin.dict', kolab_domains.json.result.list).key
  when: kolab_domain not in kolab_domains.json.result.list | dict2items | map(attribute='associateddomain')
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain.add"
    method: POST
    body_format: json
    body:
      type_id: 1
      associateddomain: "{{ kolab_domain }}"
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: domain_add
  failed_when: domain_add.json.status != 'OK'
- name: "Update Kolab domain {{ kolab_domain }}"
  # when:  ('associateddomain=' ~ kolab_domain ~ ',') in lookup('ansible.builtin.dict', kolab_domains.json.result.list).key
  when: kolab_domain in kolab_domains.json.result.list | dict2items | map(attribute='associateddomain')
  ansible.builtin.uri:
    url: "https://kolab.{{ mailserver_domain }}/kolab-webadmin/api/domain.edit"
    method: POST
    body_format: json
    body:
      type_id: 1
      associateddomain: "{{ kolab_domain }}"
      session_token: "{{ kolab_api_auth.json.result.session_token }}"
    return_content: true
    headers:
      Cookie: "{{ kolab_api_auth.cookies_string }}"
  register: domain_update
  failed_when: domain_update.json.status != 'OK'
