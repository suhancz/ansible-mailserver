---
# TODO: follow https://wiki.archlinux.org/title/LDAP_authentication and apply allowpwchange.ldif
- name: Configure sssd
  community.general.ini_file:
    path: /etc/sssd/sssd.conf
    section: "{{ sssd_item.section }}"
    option: "{{ sssd_item.option }}"
    value: "{{ sssd_item.value }}"
    backup: true
    mode: u=rw,og=
    owner: root
    group: root
  notify: Restart sssd
  loop:
    - { section: 'domain/LDAP', option: 'id_provider', value: 'ldap' }
    - { section: 'domain/LDAP', option: 'autofs_provider', value: 'ldap' }
    - { section: 'domain/LDAP', option: 'auth_provider', value: 'ldap' }
    - { section: 'domain/LDAP', option: 'chpass_provider', value: 'ldap' }
    - { section: 'domain/LDAP', option: 'ldap_uri', value: 'ldaps://{{ mailserver_domain }}' }
    - { section: 'domain/LDAP', option: 'ldap_chpass_uri', value: 'ldaps://{{ mailserver_domain }}' }
    - { section: 'domain/LDAP', option: 'ldap_search_base', value: "dc={{ mailserver_domain | split('.') | join(',dc=') }}" }
    - { section: 'domain/LDAP', option: 'sudoers_base', value: "dc={{ mailserver_domain | split('.') | join(',dc=') }}" }
    - { section: 'domain/LDAP', option: 'sudo_provider', value: 'ldap' }
    - { section: 'domain/LDAP', option: 'ldap_id_use_start_tls', value: 'True' }
    - { section: 'domain/LDAP', option: 'ldap_tls_cacert', value: '/etc/dirsrv/slapd-{{ mailserver_domain | split(".") | first }}/ca.crt' }
    - { section: 'domain/LDAP', option: 'cache_credentials', value: 'True' }
    - { section: 'domain/LDAP', option: 'enumerate', value: 'True' }
    - { section: 'domain/LDAP', option: 'ldap_tls_reqcert', value: 'allow' }
    - { section: 'domain/LDAP', option: 'entry_cache_timeout', value: '600' }
    - { section: 'domain/LDAP', option: 'ldap_network_timeout', value: '2' }
    - { section: 'domain/LDAP', option: 'ldap_schema', value: 'rfc2307bis' }
    - { section: 'domain/LDAP', option: 'ldap_group_member', value: 'uniqueMember' }
    - { section: 'domain/LDAP', option: 'ldap_default_authtok_type', value: 'password' }
    - { section: 'domain/LDAP', option: 'ldap_default_bind_dn', value: "cn=Directory Manager" }
    - { section: 'domain/LDAP', option: 'ldap_default_authtok', value: '{{ ldap_admin_password }}' }
    - { section: 'sssd', option: 'services', value: 'nss, pam, autofs, sudo' }
    - { section: 'sssd', option: 'domains', value: 'LDAP' }
    - { section: 'nss', option: 'homedir_substring', value: '/home' }
    - { section: 'sudo', option: '', value: '' }
  loop_control:
    loop_var: sssd_item
- name: Configure the native LDAP client
  ansible.builtin.lineinfile:
    path: /etc/openldap/ldap.conf
    line: "{{ openldap_item }}"
    regex: "^{{ openldap_item | split(' ') | first }} "
    state: present
    backup: yes
  loop:
    - "BASE    dc={{ mailserver_domain | split('.') | join(',dc=') }}"
    - "URI     ldaps://{{ mailserver_domain }}"
    - "TLS_CACERT      /etc/dirsrv/slapd-{{ mailserver_domain | split(".") | first }}/ca.crt"
    - "TLS_CACERTDIR /etc/dirsrv/slapd-{{ mailserver_domain | split(".") | first }}"
  loop_control:
    loop_var: openldap_item
- name: Configure nscd
  # noqa no-tabs nscd.conf does contain tabs, so we use them here
  ansible.builtin.lineinfile:
    path: /etc/nscd.conf
    line: "{{ nscd_item }}"
    regex: "^{{ nscd_item | split('\t') | first }}\t"
    state: present
    backup: yes
  loop:
    - "enable-cache		passwd		no"
    - "enable-cache		group		no"
    - "enable-cache		hosts		yes"
    - "enable-cache		netgroup	no"
  loop_control:
    loop_var: nscd_item
  notify:
    - Restart nscd
    - Restart sssd
- name: Configure nsswitch.conf
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    line: '\1 sss'
    regex: "^({{ nsswitch_item }}: .*$)"
    backrefs: yes
    state: present
    backup: yes
  loop:
    - passwd
    - group
    - shadow
    - sudoers
  loop_control:
    loop_var: nsswitch_item
  notify: Restart sssd
- name: Configure /etc/pam.d/system-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/system-auth
    line: "{{ system_auth_item }}"
    insertbefore: "^{{ system_auth_item | split(' ') | first }} "
    state: present
    backup: yes
  loop:
    - "auth sufficient pam_sss.so forward_pass"
    - "account [default=bad success=ok user_unknown=ignore authinfo_unavail=ignore] pam_sss.so"
    - "password sufficient pam_sss.so"
    - "session     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077"
  loop_control:
    loop_var: system_auth_item
  notify: Restart sssd
- name: Add pam_sss to /etc/pam.d/system-auth
  ansible.builtin.lineinfile:
    path: /etc/pam.d/system-auth
    insertafter: "session required pam_unix.so"
    line: "session optional pam_sss.so"
    # insertbefore: "session optional pam_permit.so"
    state: present
    backup: yes
  notify: Restart sssd
- name: Configure /etc/pam.d/su
  ansible.builtin.lineinfile:
    path: /etc/pam.d/su
    insertafter: "^{{ su_item | split(' ') | first }}\\s*sufficient"
    line: "{{ su_item }}"
    state: present
    backup: yes
  loop:
    - "auth sufficient   pam_sss.so      forward_pass"
    - "account [default=bad success=ok user_unknown=ignore authinfo_unavail=ignore] pam_sss.so"
    - "session optional pam_sss.so"
  loop_control:
    loop_var: su_item
  notify: Restart sssd
- name: Configure /etc/pam.d/sudo
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sudo
    insertafter: "^#%PAM-.*"
    line: "auth           sufficient      pam_sss.so"
    state: present
    backup: yes
  notify: Restart sssd
