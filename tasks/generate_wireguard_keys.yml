---
- name: "Generate private key for {{ wg_name }}"
  ansible.builtin.command: wg genkey
  when: wg_privatekey is not defined or wg_privatekey == ""
  register: wg_privatekey_output
- name: "Fetch private key for {{ wg_name }} from config"
  ansible.builtin.set_fact:
    wg_privatekey_output:
      stdout: "{{ wg_privatekey }}"
  when: wg_privatekey is defined and wg_privatekey != ""
- name: "Generate public key for {{ wg_name }}"
  ansible.builtin.command: wg pubkey
  args:
    stdin: "{{ wg_privatekey_output.stdout }}"
  when: wg_publickey is not defined or wg_publickey == ""
  register: wg_publickey_output
- name: "Fetch public key from config for {{ wg_name }}"
  ansible.builtin.set_fact:
    wg_publickey_output:
      stdout: "{{ wg_publickey }}"
  when: wg_publickey is defined and wg_publickey != ""
- name: "Generate pre-shared key for {{ wg_name }}"
  ansible.builtin.command: wg genpsk
  when: wg_psk is not defined or wg_psk == ""
  register: wg_psk_output
- name: "Fetch pre-shared key for {{ wg_name }} from config"
  ansible.builtin.set_fact:
    wg_psk_output:
      stdout: "{{ wg_psk }}"
  when: wg_psk is defined and wg_psk != ""
- name: "Generate JSON config for {{ wg_name }}"
  ansible.builtin.set_fact:
    wg_configs_json: '{"{{ wg_name }}": {"privatekey": "{{ wg_privatekey_output.stdout }}", "publickey": "{{ wg_publickey_output.stdout }}", "psk": "{{ wg_psk_output.stdout }}", "owner": "{{ wg_owner }}", "cidr": "{{ wg_cidr }}"}}'
- name: "Add {{ wg_name }} to the WireGuard config array"
  ansible.builtin.set_fact:
    wg_configs: "{{ wg_configs|default({})|combine(wg_configs_json) }}"
