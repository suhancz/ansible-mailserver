- name: Get latest postfixadmin version
  block:
    - name: Get URL for latest release
      uri:
        url: https://github.com/postfixadmin/postfixadmin/releases/latest
      register: postfixadmin_download_site
    - name: Parse version
      set_fact:
        postfixadmin_version: "{{ postfixadmin_download_site.url | replace('https://github.com/postfixadmin/postfixadmin/releases/tag/postfixadmin-','') }}"
- name: Unpack postfixadmin
  unarchive:
    src: "https://github.com/postfixadmin/postfixadmin/archive/postfixadmin-{{ postfixadmin_version }}.tar.gz"
    dest: /var/www/
    remote_src: yes
- name: Rename postfixadmin directory
  command: "mv /var/www/postfixadmin-postfixadmin-{{ postfixadmin_version }} /var/www/postfixadmin"
  args:
    creates: /var/www/postfixadmin
- name: Set up postfixadmin permissions
  file:
    path: /var/www/postfixadmin/templates_c
    state: directory
    setype: httpd_sys_rw_content_t
    recurse: yes
- name: Create postfixadmin DB schema
  include_tasks: create_mariadb_schema.yml
  vars:
    mariadb_database: postfixadmin
    mariadb_state: import
- name: Set up postfixadmin DB privileges
  mysql_user:
    name: postfixadmin
    password: '{{ postfixadmin_db_password }}'
    priv: 'postfixadmin.*:ALL'
    host: localhost
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Fill postfixadmin DB with data
  include_tasks: fill_mariadb_data.yml
  vars:
    mariadb_database:
      db: postfixadmin
      user: postfixadmin
      password: "{{ postfixadmin_db_password }}"
- name: Generate PostfixAdmin PHP password
  command: php -r 'echo password_hash("{{ postfixadmin_db_password }}", PASSWORD_DEFAULT);'
  register: postfixadmin_setup_password
- name: Create PostfixAdmin directories
  file:
    path: "{{ item }}"
    state: directory
    mode: u=rwX,og=rX
    owner: root
    group: root
    recurse: yes
  loop:
    - /etc/postfix/sql
    - /etc/mail/postfixadmin
    - /var/lock/fetchmail
- name: Render PostfixAdmin config template
  template:
    src: postfixadmin/config.local.php.j2
    dest: /var/www/postfixadmin/config.local.php
    mode: u=rw,og=r
    owner: root
    group: root
    backup: yes
- name: Render PostfixAdmin fetchmail config template
  template:
    src: postfixadmin/fetchmail.conf.j2
    dest: /etc/mail/postfixadmin/fetchmail.conf
    mode: u=rw,og=r
    owner: root
    group: root
    backup: yes
- name: Make sure log file exists for fail2ban to work
  file:
    path: /var/log/php-fpm/www-error.log
    state: touch
    owner: apache
    group: apache
    mode: u=rw,og=r
