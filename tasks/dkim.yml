---
# - name: Open firewall
#   ansible.builtin.import_tasks:: firewall.yml
#   vars:
#     port: 8891/tcp
- name: Configure OpenDKIM
  ansible.builtin.lineinfile:
    regexp: '{{ item.key }}'
    line: "{{ '#' if item.comment }}{{ item.key }}\t{{ item.value }}"
    path: /etc/opendkim.conf
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop:
    - { key: "Mode", value: "sv", comment: false }
    - { key: 'ReportAddress', value: '"{{ mailserver_domain }} Postmaster" <postmaster@{{ mailserver_domain }}>', comment: false }
    - { key: "KeyFile", value: "/etc/opendkim/keys/default.private", comment: true }
    - { key: "KeyTable", value: "/etc/opendkim/KeyTable", comment: false }
    - { key: "SigningTable", value: "refile:/etc/opendkim/SigningTable", comment: false }
    - { key: "ExternalIgnoreList", value: "refile:/etc/opendkim/TrustedHosts", comment: false }
    - { key: "InternalHosts", value: "refile:/etc/opendkim/TrustedHosts", comment: false }
    - { key: "Selector", value: "{{ dkim_selector }}", comment: false }
    - { key: "RequireSafeKeys", value: "false", comment: false}
  notify: Restart opendkim
- name: Configure OpenDKIM key table
  ansible.builtin.lineinfile:
    regexp: '{{ item }}'
    line: "{{ dkim_selector }}._domainkey.{{ item }} {{ item }}:{{ dkim_selector }}:/etc/opendkim/keys/{{ item }}/{{ dkim_selector }}.private"
    path: /etc/opendkim/KeyTable
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop: "{{ [mailserver_domain] + custom_domains }}"
  notify: Restart opendkim
- name: Configure OpenDKIM trusted hosts
  ansible.builtin.lineinfile:
    regexp: '{{ item }}'
    line: "*.{{ item }}"
    path: /etc/opendkim/TrustedHosts
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop: "{{ [mailserver_domain] + custom_domains }}"
  notify: Restart opendkim
- name: Configure OpenDKIM signing table
  ansible.builtin.lineinfile:
    regexp: '{{ item }}'
    line: "*@{{ item }} {{ dkim_selector }}._domainkey.{{ item }}"
    path: /etc/opendkim/SigningTable
    mode: u=rw,o=r
    owner: opendkim
    group: opendkim
    state: present
    backup: yes
  loop: "{{ [mailserver_domain] + custom_domains }}"
  notify: Restart opendkim
- name: Create OpenDKIM key directories
  ansible.builtin.file:
    state: directory
    path: "/etc/opendkim/keys/{{ item }}"
    mode: u=rwX,og-rwX
    owner: opendkim
    group: opendkim
    recurse: yes
  loop: "{{ [''] + [mailserver_domain] + custom_domains }}"
- name: Create OpenDKIM keys
  ansible.builtin.command: "opendkim-genkey -b 2048 -d {{ item }} -D /etc/opendkim/keys/{{ item }} -s {{ dkim_selector }} -v"
  args:
    creates: "/etc/opendkim/keys/{{ item }}/{{ dkim_selector }}.private"
  loop: "{{ [mailserver_domain] + custom_domains }}"
  notify: Restart opendkim
- name: Ensure OpenDKIM key directory permissions
  ansible.builtin.file:
    state: directory
    path: /etc/opendkim
    owner: opendkim
    group: opendkim
    recurse: yes
- name: Add Postfix user to the OpenDKIM group
  ansible.builtin.user:
    name: postfix
    groups: opendkim
    append: yes
- name: Check DKIM TXT records
  ansible.builtin.include_tasks: propagate_dkim_txt_records.yml
  vars:
    current_domain: "{{ item }}"
  loop: "{{ [mailserver_domain] + custom_domains }}"
  loop_control:
    loop_var: domain_item
