---
- name: Empty old IMAP fingerprint
  set_fact:
    old_imap_fingerprint: ''
- name: Generate config and sync old IMAP contents
  become: yes
  become_user: "{{ item.name }}"
  block:
    - name: Create offlineimap config
      template:
        src: offlineimap/offlineimaprc.j2
        dest: "{{ ansible_env.HOME }}/.offlineimaprc"
        owner: "{{ item.name }}"
        backup: yes
      no_log: yes
    - name: Sync old IMAP for the first time (this might tale a while...)
      command: offlineimap
  rescue:
    - name: Fetch old IMAPS fingerprint
      command: "openssl s_client -connect {{ item.old_imap_mail.host }}:993 < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout -in /dev/stdin"
      register: old_imap_fingerprint
    - name: Create offlineimap config
      template:
        src: offlineimap/offlineimaprc.j2
        dest: "{{ ansible_env.HOME }}/.offlineimaprc"
        owner: "{{ item.name }}"
        backup: yes
      no_log: yes
    - name: Sync old IMAP for the first time (this might tale a while...)
      command: offlineimap
- name: Sync old IMAP account
  become: yes
  become_user: "{{ item.name }}"
  cron:
    name: "Sync old IMAP account {{ item.old_imap_mail.user }} at {{ item.old_imap_mail.host }} for {{ item.name }}"
    special_time: daily
    job: offlineimap
    backup: yes
    user: "{{ item.name }}"
- name: De-duplicate IMAP mail
  become: yes
  become_user: "{{ item.name }}"
  cron:
    name: De-duplicate IMAP mail
    special_time: daily
    job: "/usr/local/bin/imapdedup.py -s {{ mailserver_domain }} -u {{ item.name }}@{{ mailserver_domain }} -w {{ item.password }} INBOX"
    backup: yes
    user: "{{ item.name }}"
  no_log: yes
