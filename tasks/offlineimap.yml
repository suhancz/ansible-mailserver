---
- name: Sync from old IMAP account
  tags: imapsync
  when: "{{ current_user.old_imap_mail is defined }}"
  block:
    - name: Empty old IMAP fingerprint
      set_fact:
        old_imap_fingerprint: ''
    - name: Generate config and sync old IMAP contents
      become: yes
      become_user: "{{ current_user.name }}"
      block:
        - name: Create offlineimap config
          template:
            src: offlineimap/offlineimaprc.j2
            dest: "/home/{{ current_user.name }}/.offlineimaprc"
            owner: "{{ current_user.name }}"
            backup: yes
          no_log: yes
        - name: Sync old IMAP for the first time (this might tale a while...)
          command: /usr/local/bin/offlineimap
      rescue:
        - name: Fetch old IMAPS fingerprint
          shell: "openssl s_client -connect {{ current_user.old_imap_mail.host }}:993 < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout -in /dev/stdin"
          register: old_imap_fingerprint
        - name: Create offlineimap config
          template:
            src: offlineimap/offlineimaprc.j2
            dest: "/home/{{ current_user.name }}/.offlineimaprc"
            owner: "{{ current_user.name }}"
            backup: yes
          vars:
            old_imap_fingerprint: "{{ old_imap_fingerprint }}"
          no_log: yes
        - name: Sync old IMAP for the first time (this might tale a while...)
          command: /usr/local/bin/offlineimap
    - name: Sync old IMAP account
      become: yes
      become_user: "{{ current_user.name }}"
      cron:
        name: "Sync old IMAP account {{ current_user.old_imap_mail.user }} at {{ current_user.old_imap_mail.host }} for {{ current_user.name }}"
        special_time: daily
        job: /usr/local/bin/offlineimap
        backup: yes
        user: "{{ current_user.name }}"
    - name: De-duplicate IMAP mail
      become: yes
      become_user: "{{ current_user.name }}"
      cron:
        name: De-duplicate IMAP mail
        special_time: daily
        job: "/usr/local/bin/imapdedup.py -s {{ mailserver_domain }} -u {{ current_user.name }}@{{ mailserver_domain }} -w {{ current_user.password }} INBOX"
        backup: yes
        user: "{{ current_user.name }}"
      no_log: yes
