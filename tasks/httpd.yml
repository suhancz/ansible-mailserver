---
- name: Open firewall
  include_tasks: firewall.yml
  vars:
    port: "{{ item }}"
  loop:
    - http
    - https
- name: Set up SELinux rules
  when: "{{ getenforce.stdout != 'Disabled' }}"
  block:
    - name: Set SELinux booleans
      seboolean:
        name: "{{ item }}"
        state: yes
        persistent: yes
      loop:
        - httpd_can_network_connect
        - httpd_execmem
        - httpd_read_user_content
        - httpd_mod_auth_pam
    - name: Generate SELinux policy
      shell: |
        sepolicy generate --init /usr/sbin/httpd
        echo 'dovecot_read_config(httpd_t)' >> httpd.te
        ./httpd.sh
        ausearch -m AVC -ts recent | audit2allow -R
- name: Render web config templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: u=rw,og=r
    owner: root
    group: root
    backup: yes
  loop:
    - { src: "httpd/clientip.conf.j2", dest: "/etc/httpd/conf.d/004-clientip.{{ mailserver_domain }}.conf" }
    - { src: "httpd/clientip-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/004-clientip.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/domain.conf.j2", dest: "/etc/httpd/conf.d/999-{{ mailserver_hostname }}.{{ mailserver_domain }}.conf" }
    - { src: "httpd/domain-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/999-{{ mailserver_hostname }}.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/dyndns.conf.j2", dest: "/etc/httpd/conf.d/005-dyndns.{{ mailserver_domain }}.conf" }
    - { src: "httpd/dyndns-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/005-dyndns.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/horde.conf.j2", dest: "/etc/httpd/conf.d/993-horde.{{ mailserver_domain }}.conf" }
    - { src: "httpd/horde-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/993-horde.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/postfixadmin.conf.j2", dest: "/etc/httpd/conf.d/001-postfixadmin.{{ mailserver_domain }}.conf" }
    - { src: "httpd/postfixadmin-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/001-postfixadmin.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/poweradmin.conf.j2", dest: "/etc/httpd/conf.d/003-poweradmin.{{ mailserver_domain }}.conf" }
    - { src: "httpd/poweradmin-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/003-poweradmin.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/vpn.conf.j2", dest: "/etc/httpd/conf.d/418-vpn.{{ mailserver_domain }}.conf" }
    - { src: "httpd/vpn-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/418-vpn.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/webdav.conf.j2", dest: "/etc/httpd/conf.d/401-webdav.{{ mailserver_domain }}.conf" }
    - { src: "httpd/webdav-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/401-webdav.{{ mailserver_domain }}-le-ssl.conf" }
    - { src: "httpd/wildcard.conf.j2", dest: "/etc/httpd/conf.d/000-wildcard.{{ mailserver_domain }}.conf" }
    - { src: "httpd/wildcard-le-ssl.conf.j2", dest: "/etc/httpd/conf.d/000-wildcard.{{ mailserver_domain }}-le-ssl.conf" }
  notify: Restart httpd
- name: Deploy SSL config
  copy:
    src: httpd/options-ssl-apache.conf
    dest: /etc/letsencrypt/options-ssl-apache.conf
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
  notify: Restart httpd
- name: Deploy Horde default config
  copy:
    src: httpd/php-horde-horde.conf
    dest: /etc/httpd/conf.d/php-horde-horde.conf
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
  notify: Restart httpd
- name: Serve user ~/public_html directories
  copy:
    src: httpd/userdir.conf
    dest: /etc/httpd/conf.d/userdir.conf
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
  notify: Restart httpd
- name: Set home directory permissions
  file:
    path: "~{{ item.name }}"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: u=rwX,go=X
  loop: "{{ users }}"
  no_log: true
- name: Set public_html directory permissions
  file:
    path: "~{{ item.name }}/public_html"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: u=rwX,go=rX
    recurse: yes
  loop: "{{ users }}"
  no_log: true
- name: Ensure user certificate directories exist
  file:
    path: "~{{ item.name }}/{{ item.name }}/public_html/.vpn"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    state: directory
  become: true
  become_user: "{{ item.name }}"
  loop: "{{ users }}"
  no_log: true
- name: BindFS mount SSL certificates to user public_html
  mount:
    path: "~{{ item.name }}/public_html/.certificates"
    src: /etc/letsencrypt/certificates
    opts: "map=root/{{ item.name }}:@root/@apache,perms=u=rwX:g=rwX,"
    state: mounted
    fstype: fuse.bindfs
  loop: "{{ users }}"
  no_log: true
- name: Set postfixadmin ACLs
  acl:
    path: /var/www/postfixadmin/templates_c
    entity: apache
    etype: user
    permissions: rwX
    state: present
    recursive: yes
- name: Create HTTPD SystemD drop-in directory
  file:
    path: /etc/systemd/system/httpd.service.d
    state: directory
- name: Increase startup timeout
  copy:
    src: systemd/httpd.timeout.conf
    dest: /etc/systemd/system/httpd.service.d/timeout.conf
    backup: yes
  notify: Restart httpd
- name: Create PAM module for HTTPD auth
  copy:
    src: pam/httpd-auth
    dest: /etc/pam.d/httpd-auth
    owner: root
    group: root
    mode: u=rw,go=r
    backup: yes
  notify: Restart httpd
- name: Deny blacklisted users from PAM authentication
  lineinfile:
    path: /etc/httpd/conf.d/denyusers
    line: "{{ item }}"
    owner: apache
    group: apache
    mode: u=rw,g=r
    create: yes
    backup: yes
  loop: "{{ httpd_pam_deny_users }}"
  notify: Restart httpd
- name: Allow Apache read /etc/shadow
  file:
    path: /etc/shadow
    state: file
    group: apache
    mode: ug=r
- name: Enable HTTPD PAM auth
  copy:
    src: httpd/55-authnz_pam.conf
    dest: /etc/httpd/conf.modules.d/55-authnz_pam.conf
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
  notify: Restart httpd
