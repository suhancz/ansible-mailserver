- name: "Read DKIM keys for {{ domain_item }}"
  command: "cat /etc/opendkim/keys/{{ domain_item }}/{{ dkim_selector }}.txt"
  register: dkim_keys
- name: "Parse DKIM keys for {{ domain_item }}"
  set_fact:
    desired_dkim_record: "{{ dkim_keys.stdout.replace(dkim_selector ~ '._domainkey\tIN\tTXT\t( \"', '').replace('\t', '').replace('\n', '').replace('\"  \"', '').replace('\" )  ; ----- DKIM key ' ~ dkim_selector ~ ' for ' ~ domain_item, '') }}"
    current_dkim_record: "{{ lookup('community.general.dig', dkim_selector ~ '._domainkey.' ~ domain_item ~ './TXT').replace('\" \"', '') }}"
- name: "Render {{ domain_item }} zone file with TXT record"
  template:
    src: pdns/dns-dkim.zone.j2
    dest: "/tmp/ansible-mailserver.dns-dkim-{{ domain_item }}.zone"
    owner: pdns
    group: pdns
    backup: yes
  when: 'public_dns == "yes"'
- name: Save current DNS zone to the result file
  shell: 'pdnsutil list-zone {{ domain_item }} | sed -e "s/a.misconfigured.dns.server.invalid/ns.{{ domain_item }}/g" | sort | uniq >> /tmp/ansible-mailserver.dns-dkim-{{ domain_item }}.zone'
- name: "Set up the {{ dkim_selector }}._domainkey.{{ domain_item }} TXT record"
  command: "pdnsutil load-zone {{ domain_item }} /tmp/ansible-mailserver.dns-dkim-{{ domain_item }}.zone"
  become: yes
  become_user: pdns
  when: '{{ public_dns == "yes" and ((reset == "yes") or (domain_item not in all_dns_zones.stdout_lines)) }}'
- name: Reload PowerDNS config
  systemd:
    name: "{{ item }}"
    daemon_reload: yes
    enabled: yes
    state: restarted
  loop:
    - pdns
    - pdns-recursor
    - dnsdist
  when: 'public_dns == "yes"'
- name: Wait for DNS server to come up
  wait_for:
    port: "{{ item }}"
  loop:
    - 5300
    - 5301
    - 53
- name: "Warn user to set up the {{ dkim_selector }}._domainkey.{{ domain_item }} TXT record with the DKIM keys"
  debug:
    msg:
      - ""
      - "Please, set up the following TXT record with your DNS provider if not done yet:"
      - "==============================================================================="
      - ""
      - "domain: *.{{ domain_item }}"
      - "record: {{ dkim_selector }}._domainkey.{{ domain_item }}"
      - "type: TXT"
      - "value: {{ desired_dkim_record }}"
      - ""
  when: desired_dkim_record != current_dkim_record
- name: "Wait for {{ dkim_selector }}._domainkey.{{ domain_item }} TXT record to get propagated"
  community.dns.wait_for_txt:
    records:
      - name: "{{ dkim_selector }}._domainkey.{{ domain_item }}"
        values: "{{ desired_dkim_record }}"
        mode: equals
    always_ask_default_resolver: no
  when: desired_dkim_record != current_dkim_record
