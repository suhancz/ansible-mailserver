---
- name: Make sure MariaDB is running
  systemd:
    name: mariadb
    daemon_reload: yes
    enabled: yes
    state: restarted
- name: Set MariaDB root password
  block:
    - name: Set the MariaDB root password
      mysql_user:
        user: root
        password: "{{ mysql_root_password }}"
        host: localhost
      no_log: yes
  rescue:
    - name: Make sure MySQL root password is right
      block:
        - name: Ensure the MariaDB root password
          mysql_user:
            user: root
            password: "{{ mysql_root_password }}"
            host: localhost
            login_user: root
            login_password: "{{ mysql_root_password }}"
          no_log: yes
      rescue:
        - name: Stop MariaDB
          when: reset == "yes" or forgotten_mariadb_root_password
          systemd:
            name: mariadb
            daemon-reload: yes
            enabled: yes
            state: stopped
        - name: Start MariaDB in safe mode
          when: reset == "yes" or forgotten_mariadb_root_password
          shell: "mysqld_safe --skip-grant-tables --skip-networking &"
        - name: "Generate MariaDB root password reset SQL"
          when: reset == "yes" or forgotten_mariadb_root_password
          template:
            src: mariadb/reset_mariadb_root_password.sql.j2
            dest: /tmp/ansible-mailserver-install.reset_mariadb_root_password.sql
            mode: u=rw,og=r
            owner: root
            group: root
            backup: yes
        - name: Force-reset the MariaDB root password
          when: reset == "yes" or forgotten_mariadb_root_password
          mysql_db:
            name: all
            state: import
            login_user: root
            target: /tmp/ansible-mailserver-install.reset_mariadb_root_password.sql
          no_log: yes
        - name: Read MariaDB PID
          when: reset == "yes" or forgotten_mariadb_root_password
          command: cat /var/run/mariadb/mariadb.pid
          register: mariadb_pid
        - name: Stop MariaDB
          when: reset == "yes" or forgotten_mariadb_root_password
          command: "kill {{ mariadb_pid.stdout }}"
        - name: Make sure MariaDB is running
          when: reset == "yes" or forgotten_mariadb_root_password
          systemd:
            name: mariadb
            daemon_reload: yes
            enabled: yes
            state: restarted
- name: Delete anonymous MySQL server user for ansible_fqdn
  mysql_user:
    user: ""
    host: "{{ ansible_fqdn }}"
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Delete anonymous MySQL server user for localhost
  mysql_user:
    user: ""
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Secure the MySQL root user for IPV6 localhost (::1)
  mysql_user:
    user: root
    password: "{{ mysql_root_password }}"
    host: "::1"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Secure the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user:
    user: root
    password: "{{ mysql_root_password }}"
    host: 127.0.0.1
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Secure the MySQL root user for localhost domain (localhost)
  mysql_user:
    user: root
    password: "{{ mysql_root_password }}"
    host: localhost
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Secure the MySQL root user for server_hostname domain
  mysql_user:
    user: root
    password: "{{ mysql_root_password }}"
    host: "{{ ansible_fqdn }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Remove the MySQL test database
  mysql_db:
    db: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
- name: Set up MariaBackup DB privileges
  mysql_user:
    name: mariabackup
    password: '{{ mariabackup_password }}'
    priv: '*.*:RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT'
    host: localhost
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: yes
