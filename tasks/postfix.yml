- name: Open firewall
  include: firewall.yml
  vars:
    port: "{{ item }}"
  loop:
    - smtp
    - smtp-submission
    - smtps
- name: Set up automatic restart of services
  include: autorestart.yml
  vars:
    service: postfix
- name: Deploy Postfix master config
  copy:
    src: postfix.master.cf
    dest: /etc/postfix/master.cf
    mode: u=rw,og=r
    backup: yes
    owner: root
    group: root
- name: Configure postfix
  command: 'postconf -e "{{ item }}"'
  loop:
    - "inet_interfaces = all"
    - "myhostname = {{ mailserver_hostname }}"
    - "mydomain = {{ mailserver_domain }}"
    - "myorigin = {{ mailserver_domain }}"
    - "mydestination = {{ mailserver_domain }}, $myhostname, localhost.$mydomain, localhost"
    - "message_size_limit = 52428800"
    - "mailbox_size_limit = 0"
    - "smtpd_tls_cert_file = /etc/letsencrypt/live/{{ mailserver_domain }}/fullchain.pem"
    - "smtpd_tls_key_file = /etc/letsencrypt/live/{{ mailserver_domain }}/privkey.pem"
    - "smtpd_tls_loglevel = 1"
    - "smtp_tls_loglevel = 1"
- name: Configure main.cf
  lineinfile:
    regexp: '^{{ item.key }} = '
    line: '{{ item.key }} = {{ item.value }}'
    path: /etc/postfix/main.cf
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop:
    - { key: "smtpd_tls_mandatory_protocols", value: "!SSLv2, !SSLv3, !TLSv1, !TLSv1.1" }
    - { key: "smtpd_tls_protocols", value: "!SSLv2, !SSLv3, !TLSv1, !TLSv1.1" }
    - { key: "smtp_tls_mandatory_protocols", value: "!SSLv2, !SSLv3, !TLSv1, !TLSv1.1" }
    - { key: "smtp_tls_protocols", value: "!SSLv2, !SSLv3, !TLSv1, !TLSv1.1" }
    - { key: "mailbox_transport", value: "lmtp:unix:private/dovecot-lmtp" }
    - { key: "smtputf8_enable", value: "no" }
    - { key: "authorized_submit_users", value: "{{ authorized_submit_users | join(',') }}" }
- name: Render Postfix SQL templates
  template:
    src: "postfix.sql.{{ item }}"
    dest: "/etc/postfix/sql/{{ item }}"
    mode: u=rw,og=r
    owner: root
    group: root
    backup: yes
  loop:
    - mysql_virtual_domains_maps.cf
    - mysql_virtual_mailbox_maps.cf
    - mysql_virtual_alias_domain_mailbox_maps.cf
    - mysql_virtual_alias_maps.cf
    - mysql_virtual_alias_domain_maps.cf
    - mysql_virtual_alias_domain_catchall_maps.cf
- name: Configure virtual domains
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK virtual domains"
    block: |
      virtual_mailbox_domains = proxy:mysql:/etc/postfix/sql/mysql_virtual_domains_maps.cf
      virtual_mailbox_maps =
         proxy:mysql:/etc/postfix/sql/mysql_virtual_mailbox_maps.cf,
         proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_mailbox_maps.cf
      virtual_alias_maps =
         proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_maps.cf,
         proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_maps.cf,
         proxy:mysql:/etc/postfix/sql/mysql_virtual_alias_domain_catchall_maps.cf
      virtual_transport = lmtp:unix:private/dovecot-lmtp
      virtual_mailbox_base = /var/vmail
      virtual_minimum_uid = 2000
      virtual_uid_maps = static:2000
      virtual_gid_maps = static:2000
- name: Configure SMTP recipient restrictions
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK SMTP recipient restrictions"
    block: |
      policyd-spf_time_limit = 3600
      smtpd_recipient_restrictions =
         permit_mynetworks,
         permit_sasl_authenticated,
         reject_unauth_destination,
         check_policy_service unix:private/policyd-spf
         check_policy_service unix:postgrey/socket
         check_client_access hash:/etc/postfix/rbl_override
         reject_rhsbl_helo dbl.spamhaus.org
         reject_rhsbl_reverse_client dbl.spamhaus.org
         reject_rhsbl_sender dbl.spamhaus.org
         permit_dnswl_client list.dnswl.org=127.0.[0..255].[1..3]
         permit_dnswl_client swl.spamhaus.org
         reject_rbl_client zen.spamhaus.org
- name: Configure Milter
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK Milter"
    block: |
      # Milter configuration
      milter_default_action = accept
      milter_protocol = 6
      smtpd_milters = inet:127.0.0.1:8891,inet:127.0.0.1:8893,unix:/run/spamass-milter/spamass-milter.sock
      non_smtpd_milters = $smtpd_milters
    backup: yes
- name: Start SPF policy daemon with Postfix
  blockinfile:
    path: /etc/postfix/master.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK SPF policy"
    block: |
      policyd-spf  unix  -       n       n       -       0       spawn
        user=policyd-spf argv=/usr/libexec/postfix/policyd-spf
    backup: yes
- name: Configure sender restrictions
  blockinfile:
    path: /etc/postfix/main.cf
    marker: "# {mark} ANSIBLE MANAGED BLOCK sender restrictions"
    block: |
      smtpd_sender_restrictions =
         permit_mynetworks
         permit_sasl_authenticated
         reject_unknown_sender_domain
         reject_unknown_reverse_client_hostname
         reject_unknown_client_hostname
- name: Configure HELO/EHLO restrictions
  blockinfile:
    marker: "# {mark} ANSIBLE MANAGED BLOCK HELO/EHLO restrictions"
    path: /etc/postfix/main.cf
    block: |
      smtpd_discard_ehlo_keywords = ''
      smtpd_helo_required = yes
      smtpd_helo_restrictions =
         permit_mynetworks
         permit_sasl_authenticated
         check_helo_access hash:/etc/postfix/helo_access
         reject_invalid_helo_hostname
         reject_non_fqdn_helo_hostname
         reject_unknown_helo_hostname
- name: Set up HELO access whitelist
  block:
    - name: Create HELO access whitelist
      lineinfile:
        regexp: "\b{{ item.key }}\b"
        line: '{{ item.key }}    {{ item.value }}'
        path: /etc/postfix/helo_access
        mode: u=rw,og=r
        owner: root
        group: root
        state: present
        backup: yes
        create: yes
      loop: "{{ helo_access }}"
    - name: Generate HELO access database
      command: postmap /etc/postfix/helo_access
  when: helo_access is defined
- name: Set up RBL whitelist
  block:
    - name: Create RBL whitelist
      lineinfile:
        regexp: "\b{{ item.key }}\b"
        line: '{{ item.key }}    {{ item.value }}'
        path: /etc/postfix/rbl_override
        mode: u=rw,og=r
        owner: root
        group: root
        state: present
        backup: yes
        create: yes
      loop: "{{ rbl_override }}"
    - name: Generate RBL database
      command: postmap /etc/postfix/rbl_override
  when: rbl_override is defined
- name: Set Postgrey whitelist
  lineinfile:
    line: '{{ item }}'
    path: /etc/postfix/postgrey_whitelist_clients
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
  loop: "{{ postgrey_whitelist_clients }}"
- name: Set POSTGREY_DELAY to 1
  lineinfile:
    regex: '^POSTGREY_DELAY='
    line: 'POSTGREY_DELAY="--delay=1"'
    path: /etc/sysconfig/postgrey
    mode: u=rw,og=r
    owner: root
    group: root
    state: present
    backup: yes
- name: Clean postfix destination
  command: 'postconf -e "mydestination = $myhostname, localhost.$mydomain, localhost"'
- name: Create directory for virtuals
  file:
    path: /var/vmail/
    state: directory
    mode: u=rwX,og=rX
    owner: vmail
    group: vmail
    setype: mail_spool_t
    recurse: yes
- name: Generate daily Postfix log report
  cron:
    name: "Generate daily Postfix log report"
    backup: yes
    hour: 4
    job: "/usr/sbin/pflogsumm -d yesterday /var/log/maillog --problems-first --rej-add-from --verbose-msg-detail -q"
    minute: 0
